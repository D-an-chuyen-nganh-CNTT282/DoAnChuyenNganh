// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLHV_BackEnd.Data;

#nullable disable

namespace QLHV_BackEnd.Migrations
{
    [DbContext(typeof(DBContextUser))]
    partial class DBContextUserModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CongTy", b =>
                {
                    b.Property<int>("CongTyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CongTyId"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongTy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CongTyId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("CongTy");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CongTyCuuSinhVien", b =>
                {
                    b.Property<int>("CuuSinhVienId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("CongTyId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("CuuSinhVienId", "CongTyId");

                    b.HasIndex("CongTyId");

                    b.ToTable("CongTyCuuSinhVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CongVanDen", b =>
                {
                    b.Property<int>("CongVanDenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CongVanDenId"));

                    b.Property<int>("DonViGui")
                        .HasColumnType("int");

                    b.Property<string>("FileScanUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayHetHanXuLy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrangXuLy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CongVanDenId");

                    b.HasIndex("DonViGui");

                    b.HasIndex("NhanVienId");

                    b.ToTable("CongVanDen");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CongVanDi", b =>
                {
                    b.Property<int>("CongVanDiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CongVanDiId"));

                    b.Property<int>("DonViNhan")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHetHanPhanHoi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrangPhanHoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CongVanDiId");

                    b.HasIndex("DonViNhan");

                    b.HasIndex("NhanVienId");

                    b.ToTable("CongVanDi");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CuuSinhVien", b =>
                {
                    b.Property<int>("CuuSinhVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuuSinhVienId"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GiangVienChuNhiemId")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoaHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LopHocTruocDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NganhHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTotNghiep")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CuuSinhVienId");

                    b.HasIndex("GiangVienChuNhiemId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("CuuSinhVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.DoanhNghiep", b =>
                {
                    b.Property<int>("DoanhNghiepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoanhNghiepId"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDoanhNghiep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoanhNghiepId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("DoanhNghiep");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.GiangVien", b =>
                {
                    b.Property<int>("GiangVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiangVienId"));

                    b.Property<string>("ChuyenMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CongTac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeHoachGiangDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeHoachNghienCuu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.HasKey("GiangVienId");

                    b.ToTable("GiangVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.HoatDongCuuSinhVien", b =>
                {
                    b.Property<int>("HoatDongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoatDongId"));

                    b.Property<int>("CuuSinhVienId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayToChuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenHoatDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HoatDongId");

                    b.HasIndex("CuuSinhVienId");

                    b.ToTable("HoatDongCuuSinhVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.HoatDongNgoaiKhoa", b =>
                {
                    b.Property<int>("HoatDongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoatDongId"));

                    b.Property<DateTime>("NgayToChuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SinhVienId")
                        .HasColumnType("int");

                    b.Property<string>("TenHoatDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HoatDongId");

                    b.HasIndex("SinhVienId");

                    b.ToTable("HoatDongNgoaiKhoa");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.HopTacDoanhNghiep", b =>
                {
                    b.Property<int>("HopTacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HopTacId"));

                    b.Property<int>("DoanhNghiepId")
                        .HasColumnType("int");

                    b.Property<string>("KetQuaHopTac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDuAn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrangDuAn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HopTacId");

                    b.HasIndex("DoanhNghiepId");

                    b.ToTable("HopTacDoanhNghiep");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.LichGiangDay", b =>
                {
                    b.Property<int>("LichId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LichId"));

                    b.Property<string>("DiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GiangVienId")
                        .HasColumnType("int");

                    b.Property<string>("MonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TietHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LichId");

                    b.HasIndex("GiangVienId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("LichGiangDay");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.PhongBan", b =>
                {
                    b.Property<int>("PhongBanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhongBanId"));

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhongBanId");

                    b.ToTable("PhongBan");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.QuanLyThucTap", b =>
                {
                    b.Property<int>("ThucTapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThucTapId"));

                    b.Property<string>("DanhGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoanhNghiepId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SinhVienId")
                        .HasColumnType("int");

                    b.HasKey("ThucTapId");

                    b.HasIndex("DoanhNghiepId");

                    b.HasIndex("SinhVienId");

                    b.ToTable("QuanLyThucTap");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.SinhVien", b =>
                {
                    b.Property<int>("SinhVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SinhVienId"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("DiemTB")
                        .HasColumnType("real");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GiangVienId")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoaHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LopHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NganhHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.HasKey("SinhVienId");

                    b.HasIndex("GiangVienId");

                    b.ToTable("SinhVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.SuKienDoanhNghiep", b =>
                {
                    b.Property<int>("SuKienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuKienId"));

                    b.Property<string>("DiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoanhNghiepId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayToChuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuKienId");

                    b.HasIndex("DoanhNghiepId");

                    b.ToTable("SuKienDoanhNghiep");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.SuKienHoiThaoGiangVien", b =>
                {
                    b.Property<int>("SuKienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuKienId"));

                    b.Property<string>("DiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GiangVienId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayToChuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuKienId");

                    b.HasIndex("GiangVienId");

                    b.ToTable("SuKienHoiThaoGiangVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.YeuCauSinhVien", b =>
                {
                    b.Property<int>("YeuCauId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YeuCauId"));

                    b.Property<string>("LoaiYeuCau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGuiYeuCau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHoanTat")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SinhVienId")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangXuLy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YeuCauId");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("SinhVienId");

                    b.ToTable("YeuCauSinhVien");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CongTy", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CongTyCuuSinhVien", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.CongTy", "CongTy")
                        .WithMany()
                        .HasForeignKey("CongTyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QLHV_BackEnd.Data.Entity.CuuSinhVien", "CuuSinhVien")
                        .WithMany()
                        .HasForeignKey("CuuSinhVienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CongTy");

                    b.Navigation("CuuSinhVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CongVanDen", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.PhongBan", "PhongBan")
                        .WithMany()
                        .HasForeignKey("DonViGui")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CongVanDi", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.PhongBan", "PhongBan")
                        .WithMany()
                        .HasForeignKey("DonViNhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CuuSinhVien", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.GiangVien", "GiangVienChuNhiem")
                        .WithMany("CuuSinhViens")
                        .HasForeignKey("GiangVienChuNhiemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVienChuNhiem");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.DoanhNghiep", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.HoatDongCuuSinhVien", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.CuuSinhVien", "CuuSinhVien")
                        .WithMany("HoatDongCuuSinhViens")
                        .HasForeignKey("CuuSinhVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuuSinhVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.HoatDongNgoaiKhoa", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.SinhVien", "SinhVien")
                        .WithMany("HoatDongNgoaiKhoas")
                        .HasForeignKey("SinhVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.HopTacDoanhNghiep", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.DoanhNghiep", "DoanhNghiep")
                        .WithMany("HopTacDoanhNghieps")
                        .HasForeignKey("DoanhNghiepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoanhNghiep");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.LichGiangDay", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.GiangVien", "GiangVien")
                        .WithMany("LichGiangDays")
                        .HasForeignKey("GiangVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.QuanLyThucTap", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.DoanhNghiep", "DoanhNghiep")
                        .WithMany("QuanLyThucTaps")
                        .HasForeignKey("DoanhNghiepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHV_BackEnd.Data.Entity.SinhVien", "SinhVien")
                        .WithMany("QuanLyThucTaps")
                        .HasForeignKey("SinhVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoanhNghiep");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.SinhVien", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.GiangVien", "GiangVien")
                        .WithMany("SinhViens")
                        .HasForeignKey("GiangVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.SuKienDoanhNghiep", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.DoanhNghiep", "DoanhNghiep")
                        .WithMany("SuKienDoanhNghieps")
                        .HasForeignKey("DoanhNghiepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoanhNghiep");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.SuKienHoiThaoGiangVien", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.GiangVien", "GiangVien")
                        .WithMany("SuKienHoiThaoGiangViens")
                        .HasForeignKey("GiangVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.YeuCauSinhVien", b =>
                {
                    b.HasOne("QLHV_BackEnd.Data.Entity.ApplicationUser", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHV_BackEnd.Data.Entity.SinhVien", "SinhVien")
                        .WithMany("YeuCauSinhViens")
                        .HasForeignKey("SinhVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.CuuSinhVien", b =>
                {
                    b.Navigation("HoatDongCuuSinhViens");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.DoanhNghiep", b =>
                {
                    b.Navigation("HopTacDoanhNghieps");

                    b.Navigation("QuanLyThucTaps");

                    b.Navigation("SuKienDoanhNghieps");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.GiangVien", b =>
                {
                    b.Navigation("CuuSinhViens");

                    b.Navigation("LichGiangDays");

                    b.Navigation("SinhViens");

                    b.Navigation("SuKienHoiThaoGiangViens");
                });

            modelBuilder.Entity("QLHV_BackEnd.Data.Entity.SinhVien", b =>
                {
                    b.Navigation("HoatDongNgoaiKhoas");

                    b.Navigation("QuanLyThucTaps");

                    b.Navigation("YeuCauSinhViens");
                });
#pragma warning restore 612, 618
        }
    }
}
